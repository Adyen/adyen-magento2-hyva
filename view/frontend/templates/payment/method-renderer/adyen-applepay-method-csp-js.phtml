<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HyvaCsp;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */
/** @var HyvaCsp $hyvaCsp */

/** Generated with hyva-csp-helper.php */
?>
<script>
    function adyenPaymentMethodRendererAdyenAppleypayMethod() {
        const methodCode = 'adyen_applepay';

        class applePayComponentHandler extends componentHandler {
            buildConfiguration(paymentMethod, paymentMethodsExtraInfo) {
                let baseComponentConfiguration = super.buildConfiguration(paymentMethod, paymentMethodsExtraInfo);

                baseComponentConfiguration.showPayButton = true;
                baseComponentConfiguration.totalPriceLabel = baseComponentConfiguration.configuration.merchantName;
                baseComponentConfiguration.code = methodCode;

                return baseComponentConfiguration
            }
        }

        window.addEventListener('checkout:payment:method-activate', async (event) => {
            await init(event.detail.method);
        });

        async function init() {
            try {
                let wire = Magewire.find('checkout.payment.methods.' + methodCode);
                wire.refreshProperties()
                    .then(() => {
                        let applePayHandler = new applePayComponentHandler(
                            methodCode,
                            wire,
                            'ApplePayActionContainer'
                        );

                        window.AdyenPaymentHandler = applePayHandler;

                        if (wire.get('requiresShipping')) {
                            applePayHandler.renderMessage("<?= $escaper->escapeJs(__('Please select shipping method.')) ?>");
                        } else {
                            let rawResponse = wire.get('paymentResponse');
                            let paymentMethods = JSON.parse(rawResponse);
                            applePayHandler.activatePaymentMethod(methodCode, paymentMethods);
                            hidePrimaryButton();
                        }
                    }).catch(() => {
                    console.log('Error occurred during Applepay component load')
                });
            } catch (e) {
            }
        }

        return {
            init
        }
    }

    window.addEventListener('alpine:init', () => Alpine.data('adyenPaymentMethodRendererAdyenAppleypayMethod', adyenPaymentMethodRendererAdyenAppleypayMethod), {once: true});
</script>
<?php $hyvaCsp->registerInlineScript() ?>
