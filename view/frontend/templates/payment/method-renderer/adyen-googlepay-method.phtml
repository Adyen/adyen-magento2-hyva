<?php

/** @var GooglePay $magewire */
/** @var Template $block */

use Magento\Framework\View\Element\Template;
use Adyen\Hyva\Magewire\Payment\Method\GooglePay;

?>

<div>
    <div id="GooglePayActionContainer" wire:ignore></div>

    <script>
        class googlePayComponentHandler extends componentHandler {
            buildConfiguration (paymentMethod, paymentMethodsExtraInfo) {
                let baseComponentConfiguration = super.buildConfiguration(paymentMethod, paymentMethodsExtraInfo);

                let googlePayConfiguration = Object.assign(baseComponentConfiguration, paymentMethodsExtraInfo[paymentMethod.type].configuration);
                googlePayConfiguration.showPayButton = true;

                return googlePayConfiguration
            }
        }

        window.adyenActiveEvents.forEach(async (element) => {
            window.addEventListener(element, async () => {
                let googlePayHandler = await init();

                if (googlePayHandler) {
                    let wire = googlePayHandler.getWire();
                    wire.processIsShippingRequired()
                        .then(() => {
                            if (wire.get('requiresShipping')) {
                                googlePayHandler.renderMessage('Please select shipping method.');
                            } else {
                                activateGooglePay(googlePayHandler);
                                window.dispatchEvent(new CustomEvent('wallet-method-active', {detail: {method: '<?= $magewire->getMethodCode() ?>'}}));
                            }
                        });
                }
            })
        });

        async function init() {
            try {
                let wire = Magewire.find('checkout.payment.method.adyen_googlepay');
                let googlePayHandler = new googlePayComponentHandler(
                    '<?= $magewire->getMethodCode() ?>',
                    wire,
                    'GooglePayActionContainer'
                );

                return googlePayHandler;
            } catch (e) {
                return null;
            }
        }

        async function activateGooglePay(googlePayHandler) {

            let paymentMethodResponse = <?= /* @noEscape */ $magewire->getPaymentResponse() ?>.paymentMethodsResponse;
            let googlepayMethodConfiguration = null;

            for (let i = 0; i < paymentMethodResponse.paymentMethods.length; i++) {
                if (paymentMethodResponse.paymentMethods[i].type == 'googlepay') {
                    googlepayMethodConfiguration = paymentMethodResponse.paymentMethods[i];
                    break;
                }
            }

            let paymentMethodsExtraInfo = <?= /* @noEscape */ $magewire->getPaymentResponse() ?>.paymentMethodsExtraDetails;
            let configuration = googlePayHandler.buildConfiguration(googlepayMethodConfiguration, paymentMethodsExtraInfo);

            let component = await googlePayHandler.buildComponent(
                <?= /* @noEscape */ $magewire->getPaymentResponse() ?>.paymentMethodsResponse,
                function (result) {
                    googlePayHandler.handleAdditionalDetails(result.data)
                },
                function (result) {},
                function (state) {
                    googlePayHandler.placeOrder(state.data);
                }
            );

            googlePayHandler.mountComponent(component, googlepayMethodConfiguration.type, configuration);
        }
    </script>
</div>
