<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HyvaCsp;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */
/** @var HyvaCsp $hyvaCsp */

?>
<script>
window.addEventListener('checkout:init:evaluation', event => {
    hyvaCheckout.evaluation.registerValidator('validate-adyen-component-state', (element, component) => {
        let isValid;

        if (!window.AdyenPaymentHandler.actionComponent.isValid) {
            window.AdyenPaymentHandler.actionComponent.showValidation();
            isValid = false;
        } else {
            isValid = true;
        }

        return isValid;
    })
})

function adyenPaymentMethodRendererAdyenDefaultMethod() {

    const dataset = this.$el.dataset,
          methodCode = dataset.methodCode;

    async function init() {

        try {
            let wire = Magewire.find('checkout.payment.methods.' + methodCode);

            wire.refreshProperties()
                .then(() => {
                    let methodHandler = new componentHandler(
                        methodCode,
                        wire,
                        dataset.containerName + 'ActionContainer'
                    );

                    window.AdyenPaymentHandler = methodHandler;

                    if (wire.get('requiresShipping')) {
                        methodHandler.renderMessage("<?= $escaper->escapeJs(__('Please select shipping method.')) ?>");
                    } else {
                        let rawResponse = wire.get('paymentResponse');
                        let paymentMethods = JSON.parse(rawResponse);
                        methodHandler.activatePaymentMethod(
                            methodCode,
                            paymentMethods,
                            dataset.containerName + 'ActionContainer'
                        );
                        showPrimaryButton();
                    }
                }).catch(() => {
                console.log(`Error occurred during ${methodCode} component load`)
            });
        } catch (e) {
            console.log(`Wire error occurred during ${methodCode} component initialization`)
        }
    }

    return {
        init
    };
}
window.addEventListener('alpine:init', () => Alpine.data('adyenPaymentMethodRendererAdyenDefaultMethod', adyenPaymentMethodRendererAdyenDefaultMethod), {once: true});
</script>
<?php $hyvaCsp->registerInlineScript() ?>