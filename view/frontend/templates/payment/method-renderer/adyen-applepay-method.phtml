<?php

/** @var ApplePay $magewire */
/** @var Template $block */
/** @var Escaper $escaper */

use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Adyen\Hyva\Magewire\Payment\Method\ApplePay;

?>

<div>
    <div id="ApplePayActionContainer" wire:ignore></div>

    <script>
        class applePayComponentHandler extends componentHandler {
            buildConfiguration (paymentMethod, paymentMethodsExtraInfo) {
                let baseComponentConfiguration = super.buildConfiguration(paymentMethod, paymentMethodsExtraInfo);

                let applePayConfiguration = Object.assign(baseComponentConfiguration, paymentMethodsExtraInfo[paymentMethod.type].configuration);
                applePayConfiguration.showPayButton = true;
                applePayConfiguration.totalPriceLabel = baseComponentConfiguration.configuration.merchantName;
                applePayConfiguration.code = "adyen_applepay";

                return applePayConfiguration
            }
        }

        window.addEventListener('checkout:payment:method-list-boot', async (event) => {
            unmountAdyenComponent();
            await init(event.detail.method);
        });

        window.addEventListener('checkout:payment:method-activate', async (event) => {
            await init(event.detail.method);
        });

        async function init(methodCode) {
            try {
                let wire = Magewire.find('checkout.payment.method.' + methodCode);
                wire.refreshProperties()
                    .then(() => {
                        let applePayHandler = new applePayComponentHandler(
                            methodCode,
                            wire,
                            'ApplePayActionContainer'
                        );

                        window.AdyenPaymentHandler = applePayHandler;

                        if (methodCode !== 'adyen_applepay') {
                            applePayHandler.renderMethodUnavailableMessage();
                            return;
                        }

                        if (wire.get('requiresShipping')) {
                            applePayHandler.renderMessage('Please select shipping method.');
                        } else {
                            let rawResponse = wire.get('paymentResponse');
                            let paymentMethods = JSON.parse(rawResponse);
                            applePayHandler.activatePaymentMethod(methodCode, paymentMethods);
                            hidePrimaryButton();
                        }
                }).catch(() => {
                    console.log('Error occurred during Applepay component load')
                });
            } catch (e) {
            }
        }
    </script>
</div>
